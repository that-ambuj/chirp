import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Image from "next/image";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

import { Inter } from "next/font/google";
import { LoadingPage } from "~/components/loading";

const interFont = Inter({
  subsets: ["latin"],
});

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.profileImageUrl}
        alt="Profile Photo"
        width={200}
        height={200}
        className="h-14 w-14 rounded-full"
      />
      <input
        placeholder="Type some emojies!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostsView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div key={post.id} className="flex gap-4 border-b border-slate-400 p-4">
      <div>
        <Image
          src={author.profileImageUrl}
          alt={`@{author.username}'s Profile Picture`}
          width={200}
          height={200}
          className="h-14 w-14 rounded-full"
        />
      </div>
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span className="font-semibold">@{author.username}</span>
          <span>Â·</span>
          <span>{dayjs(post.createdAt).fromNow().toString()}</span>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="flex flex-col">
      {data?.map((postData) => (
        <PostsView {...postData} key={postData.post.id} />
      ))}
    </div>
  );
};

export default function Home() {
  const { user, isLoaded, isSignedIn } = useUser();

  if (!isLoaded) return <LoadingPage />;
  if (!user) return null;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`flex h-screen justify-center ${interFont.className}`}>
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl ">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
}
